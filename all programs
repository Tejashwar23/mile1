1. POSSIBLE SUM PAIR--------------------------------------------------------

using System.Linq;
public int[] FindPossibleSum(int input1, int input2)
        {
            string s1 = input1.ToString();
            int[] s = new int[s1.Length];
            int o = 0;
            while (input1 != 0)
            {
                s[o++] = input1 % 10;
                input1 /= 10;
            }
            Array.Reverse(s);
            int[] a = new int[100];
            int c = 0;
            int ck = 0;
            for (int i = 0; i < s1.Length; i++)
            {
                for (int j = 0; j < s1.Length; j++)
                {
                    for (int k = j + 1; k < s1.Length; k++)
                    {
                        if (s[j] + s[k] == input2 && s[k] > 0)
                        {
                            ck++;
                            a[c++] = int.Parse(s[j].ToString() + s[k].ToString());
                        }
                        for (int m = k + 1; m < s1.Length; m++)
                        {
                            if (s[j] + s[k] + s[m] == input2 && s[m] > 0)
                            {
                                ck++;
                                a[c++] = int.Parse(s[j].ToString() + s[k].ToString() + s[m].ToString());
                            }
                            for (int n = m + 1; n < s1.Length; n++)
                            {
                                if (s[j] + s[k] + s[m] + s[n] == input2 && s[n] > 0)
                                {
                                    ck++;
                                    a[c++] = int.Parse(s[j].ToString() + s[k].ToString() + s[m].ToString() + s[n].ToString());
                                    for (int z = n + 1; z < s.Length; z++)
                                    {
                                        if (s[j] + s[k] + s[m] + s[n] + s[z] == input2 && s[z] > 0)
                                        {
                                            ck++;
                                            a[c++] = int.Parse(s[j].ToString() + s[k].ToString() + s[m].ToString() + s[n].ToString() + s[z].ToString());
                                        }
                                    }
                                }
                            }
                        }

                    }
                }
            }
            int[] b = a.Distinct().ToArray();
            Array.Sort(b);
            for (int i = 0; i < b.Length - 1; i++)
            {
                b[i] = b[i + 1];
            }
            b = b.Distinct().ToArray();
            int[] c1 = new int[1] { 0 };
            if (input2 == 0)
            {
                return null;
            }
            if (ck > 0)
                return b;
            else
                return (c1);
        }
    }
    
    2. ROMAN----------------------------------------------------------------------------------------------------
    
     public string FindMessage(string input1)
    {
        //Read only region end
        //Write code here
        //throw new NotImplementedException("Method  FindMessage(string input1) not Implemented.");
         string res = "";
            string[] arr = input1.Split(' ');
            for(int i=0;i<arr.Length;i++)
            {
                res = res + (char)getDecimal(arr[i]);
            }
	       return res;
	}
	 public int value(char r)
        {
            if (r == 'I')
                return 1;
            if (r == 'V')
                return 5;
            if (r == 'X')
                return 10;
            if (r == 'L')
                return 50;
            if (r == 'C')
                return 100;
            if (r == 'D')
                return 500;
            if (r == 'M')
                return 1000;
            return -1;
        }
        public int getDecimal(string s)
        {
            int res = 0;

            for(int i=0;i<s.Length;i++)
            {
                //Getting value of 1st char
                int s1 = value(s[i]);

                //get the next char s[i+1]
                if(i+1<s.Length)
                {
                    int s2 = value(s[i + 1]);
                    if(s1>=s2)
                    {
                        res = res + s1;
                    }
                    else
                    {
                        res = res + s2 - s1;
                        i++;//To move to next character
                    }
                }
                //only one character
                else
                {
                    res = res + s1;
                    i++;
                }        
            }
            return res;
	    
3. ADDITION OF STRINGS WITHOUT USING BIGINT------------------------------------------------------------------

char[] num1 = input1.ToCharArray();
        char[] num2 = input2.ToCharArray();
        int sum = 0;
        int carry = 0;
        int size = (input1.Length > input2.Length) ? input1.Length + 1 : input2.Length + 1;
        int[] result = new int[size];
        int index = size - 1;
        int num1index = num1.Length - 1;
        int num2index = num2.Length - 1;


        while (true)
        {
            if (num1index >= 0 && num2index >= 0)
            {
                sum = (num1[num1index]-'0') + (num2[num2index]-'0') + carry;
            }
            else if(num1index< 0 && num2index >= 0)
            {
                sum = (num2[num2index]-'0') + carry;
            }
            else if (num1index >= 0 && num2index < 0)
            {
                sum = (num1[num1index]-'0') + carry;
            }
            else { break; }


            carry = sum /10;
            result[index] = sum % 10;
            index--;
            num1index--;
            num2index--;
        } 

            if(carry>0)
            {
                result[index] = carry;
            }
       
		/*foreach(var v in result)
		{
			Console.Write(v+ "");
		}
		*/
		string res="";
		string str1="";
		foreach(var v in result)
		{
			res=res+v.ToString();
		}
		
		if(result[0]==0)
		{
			str1=res.Substring(1);
		}
		else
		{
			str1=res;
		}
		
		Console.WriteLine(str1);
		return str1;
		
4.token sequence of 3 persons-----------------------------------------------------------------------------------------

   int[] a=new int[input1];
		string res=String.Empty;
		int count=1,maxlen=0,curridx=0,maxidx=0;
		for(int i=0;i<input1;i++)
		{
			a[i]=input3[i];
		}
		Array.Sort(a);
		for(int j=0;j<input1-1;j++)
		{
			if(a[j]+1==a[j+1])
			{
				count++;
				if(count==2)
				{
					curridx=j;
				}	
			}
			else
			{
				if(count>maxlen&&count!=1)
				{
					maxidx=curridx;
					maxlen=count;
				}
				count=1;
			}
		}
		if(count>maxlen&&count!=1)
				{
					maxidx=curridx;
					maxlen=count;
				}
		if(maxlen<3)
		{
			res="NONE"+":";
		}
		else
	        {
		  for(int u=maxidx;u<maxidx+maxlen;u++)
		  {
			for(int g=0;g<input1;g++)
			{
				if(a[u]==input3[g])
				{
					res+=input2[g]+":";
				}
			}
		  }
	        }
		return res.Substring(0,res.Length-1);
		
6.WIPRO TECHNOLOGIES BANGALORE--------------------------------------------------------------

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public string reverseWordsandCase(string input1,int input2)
    {
        //Read only region end
        //Write code here
		string [] arr=input1.Split();
		string res="";
                if(input2==0)
				{
					for(int i=0;i<arr.Length;i++)
					{
						char[]ch=arr[i].ToCharArray();
						Array.Reverse(ch);
						res+=new string(ch)+" ";
					}
				}
		        else
				{
					for(int i=0;i<arr.Length;i++)
					{
						char[]ch=arr[i].ToCharArray();
						int l=ch.Length;
						if(char.IsLetter(ch[l-1]))
						{
							if(char.IsUpper(ch[0]))
							{
								ch[l-1]=char.ToUpper(ch[l-1]);
								ch[0]=char.ToLower(ch[0]);
							}
						}
					
						Array.Reverse(ch);
						res+=new string(ch)+" ";
					}
				}
		return res.Substring(0,res.Length-1);
    }
}


7.nTH PRIME---------------------------------------------------------------------------------------------

 int num = 1, i;
            int count = 0;

            while (count < n)
            {
                num = num + 1;
                for ( i = 2; i <= num; i++)
                {
                    if (num % i == 0)
                    {
                        break;
                    }
                }
                if (i == num)
                {
                    count = count + 1;
                }
            }
	    
8.prime RANGE-----------------------------------------------------------------------------------------

 int c = 0, count = 0;
            int input1 = int.Parse(Console.ReadLine());
            int input2 = int.Parse(Console.ReadLine());
            for (int i = input1; i <= input2; i++)
            {
                c = 0;
                for (int j = 2; j <= i / 2; j++)
                {
                    if (i % j == 0)
                    {
                        ++c;
                        break;
                    }
                }
                if (c == 0)
                {
                    ++count;
                }
		
9.RSF----------------------------------------------------------------------------------

		while(input1>9)
            {
                int i = 0;
                int temp = input1;
                int[] arr = new int[input1.ToString().Length];
                int[] b = new int[(input1.ToString().Length)-1];
               while(temp!=0)
                {
                    arr[i] = temp% 10;
                    i++;
                    temp /= 10;
                }
                Array.Reverse(arr);
                for(int j=0;j<arr.Length-1;j++)
                {
                    b[j] = Math.Abs(arr[j] - arr[j + 1]);
                    temp = temp * 10 + b[j];
                }
                input1 = temp;
                
            }
	    
10.BUS MANAGEMENT CPC-----------------------------------------------------------------------

		using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusManagement
{
    public class Bus : Vehicle
    {
        public  string BusID { set; get; }
        public  string BusName { set; get; }
        public int ServiceNumber { set; get; }
        public string ReservationClass { set; get; }
        public  double TicketPrice { set; get; }
        public Bus() : base()
        {

        }
        public Bus(string Source,string Destination,int Distance,int Duration,string BusID,string BusName,int ServiceNumber,string ReservationClass,double TicketPrice)
        {
            this.Source = Source;
            this.Destination = Destination;
            this.Distance = Distance;
            this.Duration = Duration;
            this.BusID = BusID;
            this.BusName = BusName;
            this.ServiceNumber = ServiceNumber;
            this.ReservationClass = ReservationClass;
            this.TicketPrice = TicketPrice;
        }
    }

}
--------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusManagement
{
    public class BusData
    {
        public List<Bus> BusList { get; set; }

        public BusData()
        {
            BusList = new List<Bus>();
        }

        public string AddBus(Bus objBus)
        {
            
            if (objBus==null)
            {
                return null;

            }
            else
            {
                Utility.BusUtility obj1 = new Utility.BusUtility();
                objBus.BusID = obj1.GenerateBusID(objBus.Source, objBus.Destination, objBus.ServiceNumber);
                objBus.BusName = obj1.GenerateBusName(objBus.Source, objBus.Destination);
                objBus.TicketPrice = obj1.FindTicketPrice(objBus.Distance, objBus.ReservationClass);
                BusList.Add(objBus);

            }
            return objBus.BusID;
        }
    }
}
-----------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusManagement.Utility
{
    public class BusUtility
    {
        public string GenerateBusID(string Source, string Destination, int ServiceNumber)
        {
            string BusId = string.Empty;
            string str = string.Empty;
            if(ServiceNumber>=100)
            {
                str = ServiceNumber.ToString();
            }
            else if(ServiceNumber<100&&ServiceNumber>10)
            {
                str = "0" + ServiceNumber.ToString();
            }
            else
            {
                str = "00" + ServiceNumber.ToString();
            }
            BusId += Source.Substring(0, 1).ToUpper();
            BusId += Destination.Substring(0, 1).ToUpper();
            BusId += "-";
            BusId += str;
            return BusId;
        }

        public string GenerateBusName(string Source, string Destination)
        {
          
            string busname = string.Empty;
            busname += Source.Substring(0, 1).ToUpper();
            busname += Source.Substring(1, 1).ToLower();
            busname += Source.Substring(2, 1).ToUpper();
            busname += "-";
            busname += Destination.Substring(0, 1).ToUpper();
            busname += Destination.Substring(1, 1).ToLower();
            busname += Destination.Substring(2, 1).ToUpper();
            return busname;
        }

        public double FindTicketPrice(int Distance, string ReservationClass)
        {
            double price = 0.0;
            if(string.Compare(ReservationClass,"AC")==0)
            {
                price = Distance * 3.5;
            }
            else
            {
                price = Distance * 2;
            }
            return price; 
        }
    }
}
-------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusManagement
{
    public class Vehicle
    {
         public string Source { set; get; }
         public string Destination { set; get; }
         public int Distance { set; get; }
         public  int Duration { set; get; }
        public Vehicle()
        {

        }
        public Vehicle(string Source,string Destination,int Distance,int Duration )
        {
            this.Source = Source;
            this.Destination = Destination;
            this.Distance = Distance;
            this.Duration = Duration;
        }
    }
   

}
-----------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusManagement
{
    class Program
    {
        static void Main(string[] args)
        {            

        }
    }
}

            
 11.INTERNET BANKING----------------------------------------------------------------------------------
 
 
 		using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class UserDetail
    {
        //TODO: Write your Code Here.
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public DateTime DOB { get; set; }
        public string MaritalStatus { get; set; }
        public string Gender { get; set; }
        public string FatherName { get; set; }
    }

}
-------------------------------------------------------------------
Program.cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    class Program
    {
        static void Main(string[] args)
        {
            //InternetBankingInfo obj1 = new InternetBankingInfo("john","smith","06/21/1999","male","single","marx");
            BankingData obj = new BankingData();
            obj.AddBankingInfo(new InternetBankingInfo("john", "smith", "06/21/1999", "male", "single", "marx"));

           // Console.ReadKey();
        }
    }
}
--------------------------------------------------------
InternetBankingInfo

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class InternetBankingInfo : UserDetail
    {
        // TODO : Write your code Here.
        public string UserID { get; set; }
        public InternetBankingInfo(string firstname, string lastname, string dob, string gender, string maritalstatus, string fathername)
        {
            this.FirstName = firstname;
            this.LastName = lastname;
            this.DOB = Convert.ToDateTime(dob);
            this.Gender = gender;
            this.MaritalStatus = maritalstatus;
            this.FatherName = fathername;
        }
    }
}
------------------------------------------------------------------
BankingUtility

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking.Utility
{
    public class BankingUtility
    {
        public string GenerateUserID(InternetBankingInfo obj)
        {
            string userId = "",outputUserid="";
            string firstname = obj.FirstName.Trim();
            string lastname = obj.LastName.Trim();
            userId = firstname.Substring(0, 2).ToUpper() + lastname.Substring(2, 2).ToUpper() + (firstname.Length + lastname.Length).ToString();
            //string month = obj.DOB.Month.ToString();
            string month = obj.DOB.ToLongDateString();
            string[] monthstring = month.Split(' ');
            string monthChar = monthstring[1];
            //Console.WriteLine("month: " + month);
            int len = obj.FatherName.Length;
            userId += monthChar[0].ToString()+obj.FatherName[0].ToString().ToUpper()+ obj.FatherName[len-1].ToString().ToUpper();
            char[] output = userId.ToCharArray();
            Array.Reverse(output);
            for(int i = 0; i < output.Length; i++)
            {
                outputUserid += output[i].ToString();
            }
            return outputUserid;
        }

    }
}
-----------------------------------------------------------------
BankingData

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class BankingData
    {
       public List<InternetBankingInfo> BankingUserList { get; set; }
        public BankingData()
        {
            BankingUserList = new List<InternetBankingInfo>(); 
        }

        public string AddBankingInfo(InternetBankingInfo obj)
        {
            if (obj == null) return null;

            Utility.BankingUtility objBankingUtility = new Utility.BankingUtility();
            obj.UserID = objBankingUtility.GenerateUserID(obj);

            BankingUserList.Add(obj);
            return obj.UserID;
        }
        public InternetBankingInfo SearchBankingInfo(string strUserID)
        {
            InternetBankingInfo result = null;
            if (strUserID == null) return null;

            for(int i = 0; i < BankingUserList.Count; i++)
            {
                if (BankingUserList[i].UserID == strUserID)
                {
                    result = BankingUserList[i];
                    break;
                }
            }
            return result;
        }

    }
}

12.TELEPHONE BILLING------------------------------------------------------------------------------

	1.BILLING.CS
	
namespace TelephoneBilling
{
    public class BillingData
    {
        public List<Bill> Bills { get; set; }

        public BillingData()
        {
            Bills = new List<Bill>();
        }

        public bool GenerateBill(Bill obj)
        {
            bool isadded = false;
            if (obj == null)
            {
                return false;
            }
            else
            {
                Random ran = new Random();
                obj.BillingID = ran.Next();

                Utility.BillingUtility bilUti = new Utility.BillingUtility();
                obj.TotalAmount = bilUti.CalculateBill(obj.Units, obj.OutstandingAmount);
                Bills.Add(obj);
                isadded = true;

            }
            return isadded;
     
        }

        public Bill SearchBill(int intBillingID)
        {
            Bill bill = new Bill();
            bill = null;
            if (intBillingID <= 0)
            {
                return null;
            }
            else
            {
                for(int i = 0; i < Bills.Count; i++)
                {
                    if (Bills[i].BillingID == intBillingID)
                    {
                        bill = Bills[i];
                    }
                }
            }
            return bill;
        }

        public bool UpdateBill(Bill obj)
        {
            bool isupdated = false;
            if (obj == null)
            {
                return false;
            }
            else
            {
                for(int i = 0; i < Bills.Count; i++)
                {
                    if (Bills[i].BillingID == obj.BillingID)
                    {
                        Utility.BillingUtility bilUti = new Utility.BillingUtility();
                        obj.TotalAmount = bilUti.CalculateBill(obj.Units, obj.OutstandingAmount);
                        obj.BillingDate = DateTime.Now;
                        Bills[i] = obj;
                        isupdated = true;

                    }
                }
            }
            return isupdated
        }
        
    }
}

    2.BILLINGUTILITY.CS
    
namespace TelephoneBilling.Utility
{
    public class BillingUtility
    {
        public decimal CalculateBill(int intNumberOfUnits, decimal decOutStandingAmount = 0.0m)
        {
            decimal chargeUnit = 0;
            decimal total = 0;
            try
            {
                if (intNumberOfUnits < 0)
                {
                    throw new TelephoneBilling.Exceptions.InvalidUnitsException("write msg given in question");
                }
                else
                {
                    if (intNumberOfUnits <= 250)
                    {
                        chargeUnit = 1.50m;
                    }
                    else if(intNumberOfUnits >= 251 && intNumberOfUnits <= 500)
                    {
                        chargeUnit = 2.50m;
                    }
                    else if (intNumberOfUnits > 500)
                    {
                        chargeUnit = 4.00m;
                    }
                    total = (intNumberOfUnits * chargeUnit) + 200 + decOutStandingAmount;
                }
            }
            catch(TelephoneBilling.Exceptions.InvalidUnitsException e)
            {
                throw e;
            }
            return total;
        }
    }
    
}

13.INTERNET BANKING----------------------------------------------------------------------------

	UserDetails.cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class UserDetail
    {
        //TODO: Write your Code Here.
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public DateTime DOB { get; set; }
        public string MaritalStatus { get; set; }
        public string Gender { get; set; }
        public string FatherName { get; set; }
    }

}
-------------------------------------------------------------------
Program.cs

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    class Program
    {
        static void Main(string[] args)
        {
            //InternetBankingInfo obj1 = new InternetBankingInfo("john","smith","06/21/1999","male","single","marx");
            BankingData obj = new BankingData();
            obj.AddBankingInfo(new InternetBankingInfo("john", "smith", "06/21/1999", "male", "single", "marx"));

           // Console.ReadKey();
        }
    }
}
--------------------------------------------------------
InternetBankingInfo

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class InternetBankingInfo : UserDetail
    {
        // TODO : Write your code Here.
        public string UserID { get; set; }
        public InternetBankingInfo(string firstname, string lastname, string dob, string gender, string maritalstatus, string fathername)
        {
            this.FirstName = firstname;
            this.LastName = lastname;
            this.DOB = Convert.ToDateTime(dob);
            this.Gender = gender;
            this.MaritalStatus = maritalstatus;
            this.FatherName = fathername;
        }
    }
}
------------------------------------------------------------------
BankingUtility

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking.Utility
{
    public class BankingUtility
    {
        public string GenerateUserID(InternetBankingInfo obj)
        {
            string userId = "",outputUserid="";
            string firstname = obj.FirstName.Trim();
            string lastname = obj.LastName.Trim();
            userId = firstname.Substring(0, 2).ToUpper() + lastname.Substring(2, 2).ToUpper() + (firstname.Length + lastname.Length).ToString();
            //string month = obj.DOB.Month.ToString();
            string month = obj.DOB.ToLongDateString();
            string[] monthstring = month.Split(' ');
            string monthChar = monthstring[1];
            //Console.WriteLine("month: " + month);
            int len = obj.FatherName.Length;
            userId += monthChar[0].ToString()+obj.FatherName[0].ToString().ToUpper()+ obj.FatherName[len-1].ToString().ToUpper();
            char[] output = userId.ToCharArray();
            Array.Reverse(output);
            for(int i = 0; i < output.Length; i++)
            {
                outputUserid += output[i].ToString();
            }
            return outputUserid;
        }

    }
}
-----------------------------------------------------------------
BankingData

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InternetBanking
{
    public class BankingData
    {
       public List<InternetBankingInfo> BankingUserList { get; set; }
        public BankingData()
        {
            BankingUserList = new List<InternetBankingInfo>(); 
        }

        public string AddBankingInfo(InternetBankingInfo obj)
        {
            if (obj == null) return null;

            Utility.BankingUtility objBankingUtility = new Utility.BankingUtility();
            obj.UserID = objBankingUtility.GenerateUserID(obj);

            BankingUserList.Add(obj);
            return obj.UserID;
        }
        public InternetBankingInfo SearchBankingInfo(string strUserID)
        {
            InternetBankingInfo result = null;
            if (strUserID == null) return null;

            for(int i = 0; i < BankingUserList.Count; i++)
            {
                if (BankingUserList[i].UserID == strUserID)
                {
                    result = BankingUserList[i];
                    break;
                }
            }
            return result;
        }

    }
}

	
